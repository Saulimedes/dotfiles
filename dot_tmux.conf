# General
set-window-option -g xterm-keys on
set -s escape-time 10
set-option -sa terminal-overrides ",xterm*:Tc"
set-option -g default-shell $SHELL
set -g allow-passthrough on

set -q -g status-utf8 on
set -q -g utf8 on
set -g history-limit 100000

set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g renumber-windows on
set -g set-titles on

set -g base-index 1
set -g pane-base-index 1

set-option -g set-titles on
set-option -g set-titles-string "[#S] #T"

# secondary binding
bind C-l send-keys 'C-l'
# navigate around split panes with C-{h/j/k/l}
bind-key -n C-h select-pane -L
bind-key -n C-j select-pane -D
bind-key -n C-k select-pane -U
bind-key -n C-l select-pane -R
# quickly open CLI tools
# mouse
set -g mouse on
# open new terminals in the same working directory
bind c new-window -c '#{pane_current_path}'
bind-key '"' split-window -h -c '#{pane_current_path}'
bind-key % split-window -v -c '#{pane_current_path}'
bind l select-layout main-vertical
bind k switch-client -l
# let active-window.kak know when it's focused
set -g focus-events on
# copy/paste
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-no-clear

# status bar
set -g status-interval 60
set -g status-style bg=terminal
set-option -g status-justify right
set-option -g status-left-length 160
set-option -g status-fg colour7
set-option -g status-bg colour0
set -g status-right-length 150
set-option -g status-left '#[bg=brightgreen]#[fg=brightwhite] #S #[bg=brightblack]#[fg=brightwhite] #H #[bg=black]'

set -g status-justify centre
set-window-option -g window-status-format "#[fg=cyan,bg=brightblack] #I #[fg=darkgrey]#W#[fg=colour5]#F #[bg=black]"
set-window-option -g window-status-current-format "#[fg=black, bg=brightgreen] #I #[fg=brightwhite, bg=brightblack] #W#F #[bg=black]"
set -g status-right "#[fg=brightwhite,bg=brightblack]#(kubectl config current-context 2>/dev/null || echo '')#(kubectl config view --minify --output 'jsonpath={..namespace}' 2>/dev/null | sed 's/^/ ∙ /' || echo '') ∙ %H:%M #{online_status}"

set-option -g pane-active-border-style fg=colour2
set-option -g pane-border-style fg=colour238

set -g @online_icon "#[fg=brightblack, bg=brightgreen] "
set -g @offline_icon "#[fg=brightblack, bg=brightred] "
set -g @route_to_ping "1.1.1.1"

# Hooks
set-hook -g pane-focus-in 'run-shell "if [ -n \"$(tmux showenv -g SSH_AUTH_SOCK | cut -d= -f2-)\" ]; then tmux setenv -g SSH_AUTH_SOCK $(tmux showenv -g SSH_AUTH_SOCK | cut -d= -f2-); fi"'

# Plugins
setenv -g TMUX_PLUGIN_MANAGER_PATH "$HOME/.tmux/plugins/"

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-online-status'

set -g @yank_action 'copy-pipe'
set -g @yank_selection 'clipboard'
set -g @yank_with_mouse off
set -g @yank_selection_mouse 'clipboard'

# Set wl-copy as default clipboard command
set -g @override_copy_command 'wl-copy'

# Override with xclip for X11 sessions
if-shell '[ -n "$DISPLAY" ] && [ -z "$WAYLAND_DISPLAY" ]' {
  set -g @override_copy_command 'xclip -selection clipboard'
}
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-vim "session"
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-processes 'ssh kubectl ansible'
set -g @plugin 'wfxr/tmux-fzf-url'
run -b '~/.tmux/plugins/tpm/tpm'
